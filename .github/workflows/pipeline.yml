name: Pipeline Image

on:
    # We only have so many github minutes, so we use a manual trigger
    # instead of automatically building on every push in a pull request.
    workflow_dispatch:
    # Trigger on all pushes to main.
    push:
      branches:
        - main
    pull_request:

jobs:
    what:
        runs-on: ubuntu-latest
        env:
          GH_TOKEN: ${{ github.token }}
        steps:
          # - name: Thing
          #   run: |
          #     gh api \
          #       -H "Accept: application/vnd.github+json" \
          #       -H "X-GitHub-Api-Version: 2022-11-28" \
          #       /repos/${{ github.repository_owner }}/${{ github.repository}}/pulls?head=${{ github.repository_owner }}:${{ github.ref }}
          - name: Get the PR associated with the branch
            id: get_pr
            uses: octokit/request-action@v2.x
            with:
              route: GET /repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:${{ github.ref }}
              mediaType: '{"format": "json"}'
          - name: Check if PR exists
            run: |
              if [ -z "${{ steps.get_pr.outputs.data }}" ]; then
                echo "No PR found for this branch."
                exit 0
              fi
          - name: Get review status
            id: get_reviews
            uses: octokit/request-action@v2.x
            with:
              route: GET /repos/${{ github.repository }}/pulls/${{ steps.get_pr.outputs.data[0].number }}/reviews
          - name: Output reviews
            run: |
              echo "Reviews: ${{ steps.get_reviews.outputs.data }}"
    prepare:
        if: github.event.review.state == 'approved'
        runs-on: ubuntu-latest
        steps:
            - id: repository_name
              run: |
                lowercase_repo_name=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
                echo "lowercase_repo_name=${lowercase_repo_name}" >> $GITHUB_OUTPUT
        outputs:
            lowercase_repo_name: ${{ steps.repository_name.outputs.lowercase_repo_name }}

    build-etl-pipeline:
        if: github.event.review.state == 'approved'
        runs-on: ubuntu-latest
        needs: prepare
        steps:
            - uses: actions/checkout@v3
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build ${{ needs.prepare.outputs.lowercase_repo_name }}-etl-pipeline
              run: |
                echo "github.head_ref : ${{ github.head_ref }}"
                echo "github.ref_name : ${{ github.ref_name }}"
                docker build --platform linux/amd64 -t ghcr.io/zenysis/${{ needs.prepare.outputs.lowercase_repo_name }}-etl-pipeline:${{ github.head_ref || github.ref_name }} -f docker/pipeline/Dockerfile --cache-from ghcr.io/zenysis/${{ needs.prepare.outputs.lowercase_repo_name }}-etl-pipeline:main,ghcr.io/zenysis/${{ needs.prepare.outputs.lowercase_repo_name }}-etl-pipeline:${{ github.head_ref || github.ref_name }} --build-arg BUILDKIT_INLINE_CACHE=1 .
                docker push ghcr.io/zenysis/${{ needs.prepare.outputs.lowercase_repo_name }}-etl-pipeline:${{ github.head_ref || github.ref_name }}
