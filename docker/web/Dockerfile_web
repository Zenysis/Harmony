ARG NAMESPACE
ARG TAG

FROM ${NAMESPACE}/harmony-web-client:${TAG} AS client-build
FROM ${NAMESPACE}/harmony-web-server:${TAG} AS server-build

# Copy everything into the distroless python build. Use the debug version so
# we can still use simple shell tools.
# NOTE(stephen): Need to do more testing with distroless. Using python slim for
# now.
# FROM gcr.io/distroless/python3.7:debug
FROM python:3.8-slim-buster

# Redeclare the TAG arg since ARGs before FROM are outside ofa build stage and
# can't be reused after FROM.
# https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact
ARG TAG

ENV INSTALL_PATH /zenysis
ENV R77_SRC_ROOT ${INSTALL_PATH}
ENV ZENYSIS_SRC_ROOT ${INSTALL_PATH}
ENV PYTHONPATH "${ZENYSIS_SRC_ROOT}:${PYTHONPATH}"
ENV PYTHONUNBUFFERED 1
ENV BUILD_TAG ${TAG}

ENV ZEN_PROD 1

# Build the parent directories needed in the install location.
RUN mkdir -p ${INSTALL_PATH}/web/public
RUN mkdir -p /data/output
WORKDIR ${INSTALL_PATH}

COPY --from=server-build \
  /usr/bin/lz4 \
  /usr/bin/lz4

COPY --from=server-build \
  /usr/bin/lz4cat \
  /usr/bin/lz4cat

# Copy the python third-party requirements.
COPY --from=server-build \
  /usr/local/lib/python3.8/site-packages \
  /usr/local/lib/python3.8/site-packages
COPY --from=server-build \
  /usr/local/src \
  /usr/local/src
COPY --from=server-build \
  /usr/local/bin/flask \
  /usr/local/bin/flask

COPY --from=server-build \
  /usr/local/bin/celery \
  /usr/local/bin/celery

# Copy the python server files.
COPY --from=server-build /server/ .

# Copy the built client files.
COPY --from=client-build /client/ web/public/

# Copy over various utilities.
COPY docker/entrypoint_web.sh docker/entrypoint_web.sh
COPY scripts scripts

# Copy all utilities used by the docker web container to the source root.
COPY docker/web/scripts/* ./

# Web server runs on port 5000.
EXPOSE 5000

CMD ./docker/entrypoint_web.sh
