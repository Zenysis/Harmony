#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: "2.2"

volumes:
  zen_extensions: {}
  zookeeper_data: {}
  zookeeper_datalog: {}
  zookeeper_logs: {}
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}

services:
  extension_loader:
    build:
      context: ../extensions
    volumes:
      - zen_extensions:/druid/extensions
    environment:
      - ZEN_DRUID_VERSION=${DRUID_VERSION}

  postgres:
    image: postgres:latest
    restart: always
    ports:
      # expose postgres port to host on a non standard port, to avoid 
      # possible conflicts with other postgres instances.
      - "5431:5432"
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid

  memcache:
    container_name: memcache
    image: memcached
    restart: always
    ports:
      - "11211:11211"

  # Need 3.5 or later for container nodes
  zookeeper:
    container_name: zookeeper
    image: zookeeper:${ZOOKEEPER_VERSION}
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog
      - zookeeper_logs:/logs
    environment:
      - ZOO_MY_ID=1

  coordinator:
    platform: linux/amd64
    image: apache/druid:${DRUID_VERSION}
    container_name: coordinator
    restart: always
    volumes:
      - ${DRUID_SHARED_FOLDER:-/home/share}:/home/share
      - coordinator_var:/opt/druid/var
      - zen_extensions:/var/lib/zen/extensions/
    depends_on:
      - zookeeper
      - postgres
      - extension_loader
    ports:
      - "8081:8081"
    command:
      - coordinator
    env_file:
      - environment/common.env
      - environment/coordinator.env

  broker:
    platform: linux/amd64
    image: apache/druid:${DRUID_VERSION}
    container_name: broker
    restart: always
    volumes:
      - broker_var:/opt/druid/var
      - zen_extensions:/var/lib/zen/extensions/
    depends_on:
      - zookeeper
      - postgres
      - memcache
      - coordinator
      - extension_loader
    ports:
      - "8082:8082"
    command:
      - broker
    env_file:
      - environment/common.env
      - environment/broker.env

  historical:
    platform: linux/amd64
    image: apache/druid:${DRUID_VERSION}
    container_name: historical
    restart: always
    volumes:
      - ${DRUID_SHARED_FOLDER:-/home/share}:/home/share
      - ${DATA_OUTPUT_FOLDER:-/data/output}:/data/output
      - historical_var:/opt/druid/var
      - zen_extensions:/var/lib/zen/extensions/
    depends_on:
      - zookeeper
      - postgres
      - memcache
      - coordinator
      - extension_loader
    ports:
      - "8083:8083"
    command:
      - historical
    env_file:
      - environment/common.env
      - environment/historical.env

  middlemanager:
    platform: linux/amd64
    image: apache/druid:${DRUID_VERSION}
    container_name: middlemanager
    restart: always
    volumes:
      - ${DRUID_SHARED_FOLDER:-/home/share}:/home/share
      - ${DATA_OUTPUT_FOLDER:-/data/output}:/data/output
      - middle_var:/opt/druid/var
      - zen_extensions:/var/lib/zen/extensions/
    depends_on:
      - zookeeper
      - postgres
      - coordinator
      - extension_loader
    ports:
      - "8091:8091"
      - "8100-8105:8100-8105"
    command:
      - middleManager
    env_file:
      - environment/common.env
      - environment/middlemanager.env

  router:
    platform: linux/amd64
    image: apache/druid:${DRUID_VERSION}
    container_name: router
    restart: always
    volumes:
      - router_var:/opt/druid/var
      - zen_extensions:/var/lib/zen/extensions/
    depends_on:
      - zookeeper
      - postgres
      - coordinator
      - extension_loader
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - environment/common.env
      - environment/router.env
