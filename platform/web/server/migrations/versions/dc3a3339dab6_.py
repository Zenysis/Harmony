'''Convert resource type to enum

Revision ID: dc3a3339dab6
Revises: ad0d35c05a7d
Create Date: 2018-06-15 10:55:33.926071

'''

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import ENUM

# revision identifiers, used by Alembic.
revision = 'dc3a3339dab6'
down_revision = 'ad0d35c05a7d'
branch_labels = None
depends_on = None

resource_type_enum = ENUM(
    'SITE', 'DASHBOARD', 'USER', 'GROUP', name='resourcetypeenum', create_type=False
)


def upgrade():
    resource_type_enum.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('resource_type', schema=None) as batch_op:
        batch_op.execute(
            'UPDATE resource_type SET name = \'group\' ' 'WHERE name = \'role\';'
        )
        batch_op.alter_column(
            'name',
            existing_type=sa.Integer(),
            type_=resource_type_enum,
            nullable=False,
            postgresql_using='upper(name)::resourcetypeenum',
        )
        batch_op.create_unique_constraint('unique_name', ['name'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('resource_type', schema=None) as batch_op:
        batch_op.drop_constraint('unique_name', type_='unique')
        batch_op.alter_column(
            'name',
            type_=sa.String(100),
            existing_type=resource_type_enum,
            nullable=False,
            postgresql_using='lower(name::varchar)',
        )

    op.execute('UPDATE resource_type SET name = \'role\' ' 'WHERE name = \'group\';')

    # ### end Alembic commands ###
    resource_type_enum.drop(op.get_bind(), checkfirst=True)
