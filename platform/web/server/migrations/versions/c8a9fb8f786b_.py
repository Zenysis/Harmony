"""empty message

Revision ID: c8a9fb8f786b
Revises: b8be31b0936f
Create Date: 2021-03-17 20:36:49.355322

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
# pylint: disable=invalid-name
revision = 'c8a9fb8f786b'
down_revision = 'b8be31b0936f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('case_event', schema=None) as batch_op:
        batch_op.alter_column(
            'type',
            existing_type=postgresql.ENUM(
                'GLOBAL',
                'USER',
                'STATUS_CHANGE',
                'METADATA_CHANGE',
                name='event_type_enum',
            ),
            type_=sa.Enum(
                'GLOBAL',
                'USER',
                'STATUS_CHANGE',
                'METADATA_CHANGE',
                name='event_type_enum',
            ),
            existing_nullable=False,
        )

    with op.batch_alter_table('case_metadata_type', schema=None) as batch_op:
        batch_op.alter_column(
            'type',
            existing_type=postgresql.ENUM(
                'STRING', 'PHONE_NUMBER', 'NUMBER', 'DATE', name='metadata_type_enum'
            ),
            type_=sa.Enum(
                'STRING',
                'PHONE_NUMBER',
                'NUMBER',
                'DATE',
                'BOOLEAN',
                name='metadata_type_enum',
            ),
            existing_nullable=False,
        )

    with op.batch_alter_table('case_type', schema=None) as batch_op:
        batch_op.alter_column(
            'type',
            existing_type=postgresql.ENUM('ALERT', 'DRUID', name='case_type_enum'),
            type_=sa.Enum('ALERT', 'DRUID', name='case_type_enum'),
            existing_nullable=False,
        )

    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.alter_column(
            'visibility_status',
            existing_type=postgresql.ENUM(
                'VISIBLE', 'HIDDEN', name='visibility_status_enum'
            ),
            type_=sa.Enum('VISIBLE', 'HIDDEN', name='visibility_status_enum'),
            existing_nullable=False,
            existing_server_default=sa.text("'VISIBLE'::visibility_status_enum"),
        )

    with op.batch_alter_table('dashboard', schema=None) as batch_op:
        batch_op.alter_column(
            'slug',
            existing_type=sa.VARCHAR(length=100),
            type_=sa.String(length=1000),
            existing_nullable=True,
        )

    with op.batch_alter_table('dashboard_report_schedule', schema=None) as batch_op:
        batch_op.alter_column(
            'cadence',
            existing_type=postgresql.ENUM(
                'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY', name='schedule_cadence_enum'
            ),
            type_=sa.Enum(
                'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY', name='schedule_cadence_enum'
            ),
            existing_nullable=False,
        )

    with op.batch_alter_table('pipeline_entity_match', schema=None) as batch_op:
        batch_op.alter_column(
            'validated_status',
            existing_type=postgresql.ENUM(
                'VALIDATED',
                'UNVALIDATED',
                'REMOVED',
                'NEW_MATCH',
                name='match_status_enum',
            ),
            type_=sa.Enum(
                'VALIDATED',
                'UNVALIDATED',
                'REMOVED',
                'NEW_MATCH',
                name='match_status_enum',
            ),
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('pipeline_entity_match', schema=None) as batch_op:
        batch_op.alter_column(
            'validated_status',
            existing_type=sa.Enum(
                'VALIDATED',
                'UNVALIDATED',
                'REMOVED',
                'NEW_MATCH',
                name='match_status_enum',
            ),
            type_=postgresql.ENUM(
                'VALIDATED',
                'UNVALIDATED',
                'REMOVED',
                'NEW_MATCH',
                name='match_status_enum',
            ),
            existing_nullable=False,
        )

    with op.batch_alter_table('dashboard_report_schedule', schema=None) as batch_op:
        batch_op.alter_column(
            'cadence',
            existing_type=sa.Enum(
                'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY', name='schedule_cadence_enum'
            ),
            type_=postgresql.ENUM(
                'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY', name='schedule_cadence_enum'
            ),
            existing_nullable=False,
        )

    with op.batch_alter_table('dashboard', schema=None) as batch_op:
        batch_op.alter_column(
            'slug',
            existing_type=sa.String(length=1000),
            type_=sa.VARCHAR(length=100),
            existing_nullable=True,
        )

    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.alter_column(
            'visibility_status',
            existing_type=sa.Enum('VISIBLE', 'HIDDEN', name='visibility_status_enum'),
            type_=postgresql.ENUM('VISIBLE', 'HIDDEN', name='visibility_status_enum'),
            existing_nullable=False,
            existing_server_default=sa.text("'VISIBLE'::visibility_status_enum"),
        )

    with op.batch_alter_table('case_type', schema=None) as batch_op:
        batch_op.alter_column(
            'type',
            existing_type=sa.Enum('ALERT', 'DRUID', name='case_type_enum'),
            type_=postgresql.ENUM('ALERT', 'DRUID', name='case_type_enum'),
            existing_nullable=False,
        )

    with op.batch_alter_table('case_metadata_type', schema=None) as batch_op:
        batch_op.alter_column(
            'type',
            existing_type=sa.Enum(
                'STRING',
                'PHONE_NUMBER',
                'NUMBER',
                'DATE',
                'BOOLEAN',
                name='metadata_type_enum',
            ),
            type_=postgresql.ENUM(
                'STRING', 'PHONE_NUMBER', 'NUMBER', 'DATE', name='metadata_type_enum'
            ),
            existing_nullable=False,
        )

    with op.batch_alter_table('case_event', schema=None) as batch_op:
        batch_op.alter_column(
            'type',
            existing_type=sa.Enum(
                'GLOBAL',
                'USER',
                'STATUS_CHANGE',
                'METADATA_CHANGE',
                name='event_type_enum',
            ),
            type_=postgresql.ENUM(
                'GLOBAL',
                'USER',
                'STATUS_CHANGE',
                'METADATA_CHANGE',
                name='event_type_enum',
            ),
            existing_nullable=False,
        )

    # ### end Alembic commands ###
