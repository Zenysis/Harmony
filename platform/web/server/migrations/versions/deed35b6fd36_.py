'''Permission Table Naming Refactor and Addition of Groups

Revision ID: deed35b6fd36
Revises: 6ba94d12d7d8
Create Date: 2017-10-11 18:04:50.865522

'''
from alembic import op
import sqlalchemy as sa

from web.server.migrations.seed_scripts.seed_deed35b6fd36 import prepopulate_data

# revision identifiers, used by Alembic.
revision = 'deed35b6fd36'
down_revision = '6ba94d12d7d8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # NOTE - Alembic did not detect this migration correctly.
    # All code is manually written by Vedant.
    # ### end Alembic commands ###

    op.create_table(
        'group',
        sa.Column('id', sa.INTEGER, primary_key=True),
        sa.Column('name', sa.String(50), nullable=False, unique=True),
    )

    op.create_table(
        'group_roles',
        sa.Column('id', sa.INTEGER, primary_key=True),
        sa.Column(
            'group_id',
            sa.INTEGER,
            sa.ForeignKey('group.id', ondelete='CASCADE', name='valid_group'),
            nullable=False,
        ),
        sa.Column(
            'role_id',
            sa.INTEGER,
            sa.ForeignKey('role.id', ondelete='CASCADE', name='valid_role'),
            nullable=False,
        ),
        sa.Column(
            'resource_id',
            sa.INTEGER,
            sa.ForeignKey('resource.id', ondelete='CASCADE', name='valid_resource'),
            nullable=True,
        ),
    )

    op.create_table(
        'group_users',
        sa.Column('id', sa.INTEGER, primary_key=True),
        sa.Column(
            'group_id',
            sa.INTEGER,
            sa.ForeignKey('group.id', ondelete='CASCADE', name='valid_group'),
            nullable=False,
        ),
        sa.Column(
            'user_id',
            sa.INTEGER,
            sa.ForeignKey('user.id', ondelete='CASCADE', name='valid_user'),
            nullable=False,
        ),
    )

    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.alter_column('definition_id', new_column_name='permission_id')

    op.rename_table('permission', 'role_permissions')
    op.rename_table('permission_definition', 'permission')
    prepopulate_data(op)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # NOTE - Alembic did not detect this migration correctly.
    # All code is manually written by Vedant.
    # ### end Alembic commands ###
    op.drop_table('group')
    op.drop_table('group_users')
    op.drop_table('group_roles')
    op.rename_table('role_permissions', 'permission')
    op.rename_table('permission', 'permission_definition')

    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.alter_column('permission_id', new_column_name='definition_id')
