# pylint: disable=invalid-name
"""Introduces triggers for data catalog last modified column updates

Revision ID: 2b730c14f514
Revises: c30c94961873
Create Date: 2023-07-15 00:28:05.851161

"""
from alembic import op

from models.alchemy.data_upload import (
    DataprepFlow,
    DataprepJob,
    DataUploadFileSummary,
    SelfServeSource,
)
from models.alchemy.query import (
    Category,
    Dimension,
    DimensionCategory,
    DimensionCategoryMapping,
    Field,
    FieldCategoryMapping,
    FieldDimensionMapping,
    FieldPipelineDatasourceMapping,
    PipelineDatasource,
)


DATA_CATALOG_TABLES = [
    Field.__tablename__,
    Dimension.__tablename__,
    PipelineDatasource.__tablename__,
    Category.__tablename__,
    DimensionCategory.__tablename__,
    FieldDimensionMapping.__tablename__,
    FieldPipelineDatasourceMapping.__tablename__,
    FieldCategoryMapping.__tablename__,
    DimensionCategoryMapping.__tablename__,
    DataUploadFileSummary.__tablename__,
    DataprepFlow.__tablename__,
    DataprepJob.__tablename__,
    SelfServeSource.__tablename__,
]

# revision identifiers, used by Alembic.
revision = '2b730c14f514'
down_revision = 'c30c94961873'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        '''
        CREATE OR REPLACE FUNCTION update_last_modified_column()
        RETURNS TRIGGER AS $$
        BEGIN
            NEW.last_modified = now();
            RETURN NEW;
        END;
        $$ LANGUAGE plpgsql;
    '''
    )
    for table_name in DATA_CATALOG_TABLES:
        op.execute(
            f'''
            CREATE TRIGGER update_last_modified
            BEFORE UPDATE ON {table_name}
            FOR EACH ROW EXECUTE PROCEDURE update_last_modified_column();
        '''
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    for table_name in DATA_CATALOG_TABLES:
        op.execute(
            f'''
            DROP TRIGGER IF EXISTS update_last_modified ON {table_name};
        '''
        )
    op.execute(
        '''
        DROP FUNCTION IF EXISTS update_last_modified_column();
    '''
    )
    # ### end Alembic commands ###
