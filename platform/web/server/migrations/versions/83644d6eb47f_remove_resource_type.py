"""Removing Resource Type from Role object.
WARNING: upgrading and downgrading is destructive, this will not backfill values.

Revision ID: 83644d6eb47f
Revises: 1fdcf826e468
Create Date: 2020-02-14 06:46:25.725488

"""
from alembic import op
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import Session
import sqlalchemy as sa

from log import LOG
from web.server.migrations.seed_scripts.seed_83644d6eb47f_remove_resource_type import (
    upvert_data,
)

# revision identifiers, used by Alembic.
revision = '83644d6eb47f'
down_revision = '1fdcf826e468'
branch_labels = None
depends_on = None


Base = declarative_base()


class OldRole(Base):  # type: ignore
    __tablename__ = 'role'

    id = sa.Column(sa.Integer(), primary_key=True)
    name = sa.Column(sa.String(50), nullable=False, server_default='', unique=True)
    label = sa.Column(sa.Unicode(255), server_default='')  # for display purposes
    resource_type_id = sa.Column(sa.Integer(), nullable=True)


# For downgrade, but assumes that all "default" (old) roles still exist
ROLE_ID_NAME_LIST = [
    {'role_name': 'admin', 'resource_type_id': 1},
    {'role_name': 'dashboard_viewer', 'resource_type_id': 2},
    {'role_name': 'dashboard_editor', 'resource_type_id': 2},
    {'role_name': 'dashboard_admin', 'resource_type_id': 2},
    {'role_name': 'directory_reader', 'resource_type_id': 1},
    {'role_name': 'query_runner', 'resource_type_id': 1},
    {'role_name': 'user_admin', 'resource_type_id': 3},
    {'role_name': 'user_moderator', 'resource_type_id': 3},
    {'role_name': 'group_admin', 'resource_type_id': 4},
    {'role_name': 'group_moderator', 'resource_type_id': 4},
    {'role_name': 'query_policy_admin', 'resource_type_id': 5},
    {'role_name': 'query_policy_holder', 'resource_type_id': 5},
    {'role_name': 'query_analyst', 'resource_type_id': 1},
    {'role_name': 'alert_admin', 'resource_type_id': 6},
    {'role_name': 'alert_creator', 'resource_type_id': 6},
    {'role_name': 'alert_editor', 'resource_type_id': 6},
    {'role_name': 'alert_viewer', 'resource_type_id': 6},
]


def upgrade():
    # NOTE: Not exactly related to this diff but it's easiest to do clean
    # up before resource types disappear.
    upvert_data(op)

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_constraint('valid_resource_type', type_='foreignkey')
        batch_op.drop_column('resource_type_id')

    # ### end Alembic commands ###


def restore_resource_types(alembic_operation):
    bind = alembic_operation.get_bind()
    session = Session(bind=bind)

    LOG.info('Restoring resource_types to roles')

    for item in ROLE_ID_NAME_LIST:
        role_name = item['role_name']
        resource_type_id = item['resource_type_id']
        entity = session.query(OldRole).filter_by(name=role_name).first()
        if entity:
            entity.resource_type_id = resource_type_id

    session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                'resource_type_id',
                sa.INTEGER(),
                autoincrement=False,
                nullable=False,
                server_default='1',
            )
        )
        batch_op.create_foreign_key(
            'valid_resource_type',
            'resource_type',
            ['resource_type_id'],
            ['id'],
            ondelete='RESTRICT',
        )

    restore_resource_types(op)

    # ### end Alembic commands ###
