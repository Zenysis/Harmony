# pylint: disable=invalid-name
"""Remove indicators and indicatorGroup model

Revision ID: bb8d1e7a1640
Revises: 925fed9a10e4
Create Date: 2022-08-01 13:52:34.464704

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bb8d1e7a1640'
down_revision = '925fed9a10e4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        'indicator_constituents_calculated_indicator_id_fkey',
        'indicator_constituents',
        type_='foreignkey',
    )
    op.drop_constraint(
        'indicator_constituents_indicator_id_fkey',
        'indicator_constituents',
        type_='foreignkey',
    )
    op.drop_table('indicator_constituents')
    op.drop_table('indicators')
    op.drop_table('indicator_groups')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'indicator_groups',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('indicator_groups_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('text_id', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('group_text', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='indicator_groups_pkey'),
        sa.UniqueConstraint('text_id', name='unique_group_text_id'),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        'indicators',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('indicators_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('text_id', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('formula', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('raw_formula', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['group_id'], ['indicator_groups.id'], name='indicators_group_id_fkey'
        ),
        sa.PrimaryKeyConstraint('id', name='indicators_pkey'),
        sa.UniqueConstraint('text_id', name='unique_indicator_text_id'),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        'indicator_constituents',
        sa.Column(
            'calculated_indicator_id', sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column('indicator_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ['calculated_indicator_id'],
            ['indicators.id'],
            name='indicator_constituents_calculated_indicator_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['indicator_id'],
            ['indicators.id'],
            name='indicator_constituents_indicator_id_fkey',
        ),
        sa.PrimaryKeyConstraint(
            'calculated_indicator_id',
            'indicator_id',
            name='indicator_constituents_pkey',
        ),
    )
    # ### end Alembic commands ###
